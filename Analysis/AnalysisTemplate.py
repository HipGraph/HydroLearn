import os

from Experimentation.ExperimentTemplate import *
from Analysis.Analysis import *


# This class (optional) is used to define settings used in all subsequent analysis' of this module
class Template_Analysis(Analysis):

    # Defines the root directory of analysis' in this module as Analysis/<ModuleName>/
    def result_dir(self):
        return os.sep.join([__file__.replace(".py", ""), self.name()])


class Analysis__1(Template_Analysis):

    # Definition for __init__() is optional but users will typically need access to the arguments generated by the 
    #   experiment this analysis is meant to process. We use __init__() to instantiate the experiment for later 
    #   usage (in name(), etc).
    def __init__(self):
        self.exp = Experiment__1()

    # Name of this Analysis. It is used to cache results in Analysis/<ModuleName>/TestModels/
    def name(self):
        return self.exp.name()

    # Used to define post-processing on results of ExperimentTemplate.Experiment__1
    def steps(self, args):
        pass
